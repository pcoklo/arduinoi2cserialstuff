#include <Wire.h>
#include <RCSwitch.h>
#define LED 13

RCSwitch mySwitch = RCSwitch();

String inputString="", dataString="", tempString="", nullString="";
int Address=9, Quantity=24;
byte j=0;
int AddressArray[100];

void setup(){
  mySwitch.enableTransmit(4);
  Wire.begin();
  Serial.begin(9600);
  pinMode(A4, INPUT_PULLUP);
  pinMode(A5, INPUT_PULLUP);
  getAddresses();
}

void loop(){
  digitalWrite(LED,1);
}

void serialEvent() {
  digitalWrite(LED,0);
  inputString=nullString;
  while(Serial.available()>0){
    inputString+=(char)Serial.read();
    delay(10);
  }
  stringHandle();
}

void stringHandle(){

  if(inputString.startsWith("wire")){
    byte D=inputString.indexOf("-");
    byte a=inputString.indexOf("a");
    byte q=inputString.indexOf("q");
    
    if(inputString.indexOf("'")>=0)
    dataString=inputString.substring(inputString.indexOf("'")+1,inputString.lastIndexOf("'"));
    else if(inputString.indexOf('"')>=0)
    dataString=inputString.substring(inputString.indexOf('"')+1,inputString.lastIndexOf('"'));
    else dataString=inputString.substring(inputString.lastIndexOf(" ")+1,inputString.length());

    //ako je jedna opcija zadana
    if(D>=0){
      if(inputString.charAt(D+1)=='a'){
        tempString=inputString.substring(a+2,inputString.indexOf(" ",a+2));
        if(tempString.toInt()>=0)Address=tempString.toInt();
        if(tempString=="led")Address=20;
        if(tempString=="test")Address=9;
        if(tempString=="all")Address=0;
      }  
      if(inputString.charAt(D+1)=='q'){
        tempString=inputString.substring(q+2,inputString.indexOf(" ",q+2));
        if(tempString.toInt()>0)Quantity=tempString.toInt();
      }
    }

    // ako je druga opcija zadana
    byte D1=inputString.indexOf("-",D+1);
    if(D1>=0){
      if(inputString.charAt(D1+1)=='a'){
        tempString=inputString.substring(a+2,inputString.indexOf(" ",a+2));
        if(tempString.toInt()>=0)Address=tempString.toInt();
        if(tempString=="led")Address=20;
        if(tempString=="test")Address=9;
        if(tempString=="all")Address=0;
      }
      if(inputString.charAt(D1+1)=='q'){
        tempString=inputString.substring(q+2,inputString.indexOf(" ",q+2));
        if(tempString.toInt()>0)Quantity=tempString.toInt();
      }
    }
    wire();
  }
  if(inputString.startsWith("rc")){
    dataString=inputString.substring(inputString.indexOf(" ")+1,inputString.length());
    rc();
  }
  inputString=nullString;
}

void wire(){
  if(dataString=="wire" || Address<0)getAddresses();
  else if(chechAddress()){
    byte l=dataString.length();
    byte data[l];
    for(byte i=0;i<l;i++)
    data[i]=dataString.charAt(i);
    Wire.beginTransmission(Address);
    Wire.write(data,l);
    Wire.endTransmission();
    delay(100);
    while(Wire.available()){
      byte c=Wire.read();
      if(c!=255)inputString+=(char)c;
    }
  }
}

void getAddresses(){
  j=0;
  for(int i=1;i<100;i++){
    Wire.beginTransmission(i);
    Wire.write("wire");
    Wire.endTransmission();
    delay(10);
    Wire.requestFrom(i,Quantity,true);
    while(Wire.available()){
      byte c=Wire.read();
      if(c!=255)inputString+=(char)c;
    }
    if(inputString != nullString){
      AddressArray[j]=i;j++;
    }
    inputString=nullString;
  }
}

boolean chechAddress(){
  boolean flag=0;
  for(byte i=0;i<j;i++){
    if(Address==AddressArray[i])
      {flag=1;break;}
  }
  if(flag==0){
    Wire.beginTransmission(Address);
    Wire.write("wire");
    Wire.endTransmission();
    delay(10);
    Wire.requestFrom(Address,Quantity,true);
    while(Wire.available()){
      byte c=Wire.read();
      if(c!=255)inputString+=(char)c;
    }
    if(inputString != nullString){
      AddressArray[j+1]=Address;
      flag=1;
    }
    inputString=nullString;
  }
  if(flag==1)return 1;
  else return 0;
}

void rc(){
  byte l=dataString.length(), Q=24;  
  if(dataString.startsWith("I")){
    tempString=dataString.substring(1,l);
    int value=tempString.toInt();
    mySwitch.send(value,16);
  }
  else if(dataString.startsWith("b") && l>1){
    long value=0;
    byte bitArray[l];
    byte k=0;
    for(byte i=l-1;i>0;i--){
      byte charValue=dataString.charAt(i)-48;
      if(charValue==1 || charValue==0)
        value+=(charValue)*pow(k);
      else k--;      
      k++;
    }
    if(value<=2147483647) Q=32;
    if(value<16777216) Q=24;
    if(value<65536) Q=16;
    if(value<256) Q=8;
    mySwitch.send(value,Q);
  }

  else if(dataString=="A")mySwitch.send(5588305,24);
  else if(dataString=="a")mySwitch.send(5588308,24);
  else if(dataString=="B")mySwitch.send(5591377,24);
  else if(dataString=="b")mySwitch.send(5591380,24);
  else if(dataString=="C")mySwitch.send(5592145,24);
  else if(dataString=="c")mySwitch.send(5592148,24);
  else if(dataString=="D")mySwitch.send(5592337,24);
  else if(dataString=="d")mySwitch.send(5592340,24);
  else if(dataString=="E")mySwitch.send(1394001,24);
  else if(dataString=="e")mySwitch.send(1394004,24);
}

long pow(int p){
  long value=1;
  for(int i=1;i<=p;i++)
    value=value*2;
  return value;
}
